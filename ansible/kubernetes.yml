- name: Provision CA and Generate TLS Certificates
  hosts: 127.0.0.1
  connection: local
  roles:
    - role: provision-ca-generate-tls-certificates
  tags:
    - certificates

- name: "Create secrets directory for all servers"
  hosts: all
  become: true
  tasks:
    - name: "Create /var/lib/k8s_secrets"
      file:
        path: "/var/lib/k8s_secrets"
        state: directory
        owner: root
        group: root
        mode: "700"
    - name: "Install ACL package for granting additional access to services that require it"
      apt:
        name: "acl"
        state: "present"

- name: Deploy Worker Certificates
  hosts: workers
  become: yes
  tasks:
    - name: Deploy Certificates
      copy:
        src: "secure/{{item}}"
        dest: "/var/lib/k8s_secrets/{{item}}"
        mode: "750"
        owner: root
        group: root
      loop:
        - ca.pem
        - "{{inventory_hostname}}-key.pem"
        - "{{inventory_hostname}}.pem"
  tags:
    - certificates

- name: Deploy Controller Certificates
  hosts: controllers
  become: yes
  tasks:
    - name: Deploy Extra certs for controllers
      copy:
        src: "secure/{{item}}"
        dest: "/var/lib/k8s_secrets/{{item}}"
        mode: "750"
      loop:
        - ca.pem
        - ca-key.pem
        - kubernetes-key.pem
        - kubernetes.pem
        - service-account-key.pem
        - service-account.pem
  tags:
    - certificates

- name: Generate Kubernetes Configuration Files for Authentication
  hosts: 127.0.0.1
  connection: local
  tasks:
    - name: "worker nodes - slightly custom config"
      include_role:
        name: generate-k8s-config-files-for-auth
      vars:
        conffile:
          target: "node {{item}}"
          server_url: "https://{{kubernetes_public_address}}:6443"
          kubeconfig: "{{item}}.kubeconfig"
          client_certificate: "{{item}}.pem"
          client_key: "{{item}}-key.pem"
          credential_target: "node:{{item}}"
      loop:
        - "worker-0"
        - "worker-1"
        - "worker-2"
    - name: "generalized configs (all non worker nodes)"
      include_role:
        name: generate-k8s-config-files-for-auth
      vars:
        conffile:
          target: "{{item.name}}"
          server_url: "{{item.url}}"
          kubeconfig: "{{item.name}}.kubeconfig"
          client_certificate: "{{item.name}}.pem"
          client_key: "{{item.name}}-key.pem"
          credential_target: "{{item.name}}"
      loop:
        - { name: "kube-proxy", url: "https://{{kubernetes_public_address}}:6443" }
        - { name: "kube-controller-manager", url: "https://127.0.0.1:6443" }
        - { name: "kube-scheduler", url: "https://127.0.0.1:6443" }
        - { name: "admin", url: "https://127.0.0.1:6443" }
  tags:
    - auth_config_files


- name: Deploy Worker Config Files
  hosts: workers
  tasks:
    - name: "Deploy worker configs"
      copy:
        src: "kubeconfig/{{item}}"
        dest: "{{ansible_env.HOME}}/{{item}}"
      loop:
        - "{{inventory_hostname}}.kubeconfig"
        - "kube-proxy.kubeconfig"
  tags:
    - auth_config_files

- name: Deploy Controller Config Files
  hosts: controllers
  tasks:
    - name: Deploy Controller Configs
      copy:
        src: "kubeconfig/{{item}}"
        dest: "{{ansible_env.HOME}}/{{item}}"
      loop:
        - "admin.kubeconfig"
        - "kube-controller-manager.kubeconfig"
        - "kube-scheduler.kubeconfig"
  tags:
    - auth_config_files

- name: "Create The Encryption Config File, locally, if it does not already exist"
  hosts: 127.0.0.1
  connection: local
  roles:
    - data-encryption-config-and-key

- name: "Deploy the Encryption Config File"
  hosts: controllers
  become: yes
  tasks:
    - copy:
        src: 'secure/encryption-config.yaml'
        dest: "/var/lib/k8s_secrets/encryption-config.yaml"
        mode: "600"

- name: "Bootstrap etcd"
  hosts: controllers
  become: yes
  roles:
    - role: "bootstrap-etcd-cluster"
  tags:
    - etcd

- name: "Provision Control Plane"
  hosts: controllers
  become: yes
  roles:
    - role: "k8s-control-plane-provision"
    - role: "k8s-control-plane-https-checks"
    - role: "k8s-control-plane-verify"
  tags:
    - control_plane

- name: "Setup RBAC for Control Plane"
  hosts: controllers[0]
  roles:
    - role: "k8s-control-plane-rbac"
  tags:
    - control_plane
    - control_plane_rbac
