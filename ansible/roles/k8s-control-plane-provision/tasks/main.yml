---
- name: Ensure kubernetes conf dirs exist
  file:
    path: '{{item}}'
    state: directory
    owner: root
    group: root
    mode: '755'
  loop:
    - "/etc/kubernetes"
    - "/etc/kubernetes/config"

- name: "install dependency programs"
  apt:
    pkg:
      - apt-transport-https
      - gnupg2
      - curl
#- name: "Add kubernetes apt key"
#  apt_key:
#    url: "https://packages.cloud.google.com/apt/doc/apt-key.gpg"
#
#- name: "Add kubernetes-xenial repo"
#  apt_repository:
#    repo: 'deb https://apt.kubernetes.io/ kubernetes-xenial main'
#    filename: 'kubernetes'
#
#- name: "Install kubectl from repo"
#  apt:
#    pkg:
#      - kubectl
#    update_cache: yes
#
#- name: "Snap is a pre-requisite"
#  systemd:
#    name: "snapd"
#    state: "started"
#    enabled: yes
#
#- name: "Install additional pre-requisites"
#  snap:
#    name: "{{item}}"
#    classic: yes
#  loop:
#    - kube-apiserver
#    - kube-controller-manager
#    - kube-scheduler

- name: "Install Kubernetes programs from source url"
  get_url:
    url: "{{item.url}}"
    dest: "/usr/local/bin/{{item.name}}"
    mode: "755"
  loop:
   - { "name": "kube-apiserver",          "url": "https://storage.googleapis.com/kubernetes-release/release/v1.18.6/bin/linux/amd64/kube-apiserver" \
   - { "name": "kube-controller-manager", "url": "https://storage.googleapis.com/kubernetes-release/release/v1.18.6/bin/linux/amd64/kube-controller-manager" \
   - { "name": "kube-scheduler",          "url": "https://storage.googleapis.com/kubernetes-release/release/v1.18.6/bin/linux/amd64/kube-scheduler" \
   - { "name": "kubectl",                 "url": "https://storage.googleapis.com/kubernetes-release/release/v1.18.6/bin/linux/amd64/kubectl"

- name: "Create config dir"
  file:
    path: "/var/lib/kubernetes"
    state: directory
    owner: root
    group: root
    mode: "755"

- name: "Reference secrets"
  file:
    src: "/var/lib/k8s_secrets/{{item}}"
    dest: "/var/lib/kubernetes/{{item}}"
    owner: root
    group: root
    state: link
  loop:
    - ca.pem
    - ca-key.pem
    - kubernetes.pem
    - kubernetes-key.pem
    - service-account.pem
    - service-account-key.pem
    - encryption-config.yaml

- name: "Place kube-apiserver systemd config"
  template:
    src: kube-apiserver.service.j2
    dest: /etc/systemd/system/kube-apiserver.service
    owner: root
    group: root
    mode: "644"

- name: Place  kube-controller-manager kubeconfig
  copy:
    src: kubeconfig/kube-controller-manager.kubeconfig
    dest: /var/lib/kubernetes/
    owner: root
    group: root
    mode: "644"

- name: "Place kube-controller-manager systemd config"
  template:
    src: kube-controller-manager.service.j2
    dest: /etc/systemd/system/kube-controller-manager.service
    owner: root
    group: root
    mode: "644"

- name: Place the kube-scheduler kubeconfig
  copy:
    src: kubeconfig/kube-scheduler.kubeconfig
    dest: /var/lib/kubernetes/
    owner: root
    group: root
    mode: "644"

- name: Create kube-scheduler config
  template:
    src: kube-scheduler.yaml.j2
    dest: /var/lib/kubernetes/kube-scheduler.yaml
    owner: root
    group: root
    mode: "644"

- name: "Place kube-scheduler systemd config"
  template:
    src: kube-scheduler.service.j2
    dest: /etc/systemd/system/kube-scheduler.service
    owner: root
    group: root
    mode: "644"

- name: Systemd daemon reload
  systemd:
    daemon_reload: yes

- name: Enable and (re)start control plane services
  systemd:
    name: "{{item}}"
    enabled: yes
    state: restarted
  loop:
    - kube-apiserver.service
    - kube-controller-manager.service
    - kube-scheduler.service
